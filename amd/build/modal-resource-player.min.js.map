{"version":3,"file":"modal-resource-player.min.js","sources":["../src/modal-resource-player.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A set of functions to be added to charts tab load-tabs.js.\n * Most of these functions enable modal forms for the adding/deleting of charts or editing existing charts.\n *\n * @module     mod_clearlesson/modal-resource-browser\n * @copyright  2024 Dan Watkins <dwatkins@charitylearning.org>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      2.9\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport * as Utils from './utils';\nimport * as ResourceBrowser from './modal-resource-browser';\n\nvar currentPlayerForm;\n\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        var externalref, type;\n        var position = 1;\n        let element = e.target;\n        if (element.classList?.contains('play-icon')\n        || element.parentElement.classList?.contains('play-icon')\n        || element.classList?.contains('video-player-link')\n        || element.parentElement.classList?.contains('video-player-link')) {\n            if (element.classList.contains('mini-player')) {\n                return true;\n            }\n            e.preventDefault();\n            externalref = element.getAttribute('data-externalref') ?? element.parentElement.getAttribute('data-externalref');\n            const modals = document.getElementsByClassName('modal');\n            if (modals.length > 1) {\n                const videoListColumn = element.closest('.video-list-column');\n                if (!videoListColumn) {\n                    return false;\n                }\n                if (videoListColumn.hasAttribute('data-playlist')) {\n                    position = parseInt(element.closest('.video-card-side').firstElementChild.innerText);\n                    externalref = videoListColumn.getAttribute('data-playlist');\n                    type = 'playlists';\n                } else if (videoListColumn.hasAttribute('data-speaker')) {\n                    externalref = videoListColumn.getAttribute('data-speaker');\n                    position = parseInt(element.closest('.has-position').getAttribute('data-position'));\n                    type = 'speakers';\n                } else {\n                    type = 'play';\n                }\n                reRenderResourcePlayer(externalref, position, type);\n            } else {\n                openResourcePlayer(externalref);\n            }\n        }\n        const isSpeakerLink = element.classList?.contains('speaker-link');\n        const isTopicLink = element.classList.contains('topic-tag');\n        if (isSpeakerLink || isTopicLink) {\n            e.preventDefault();\n            if (isSpeakerLink) {\n                externalref = element.getAttribute('data-speakers');\n                if (externalref === 'CLC-Animation') {\n                    type = 'collections';\n                    externalref = 'Charity-Focused';\n                } else {\n                    type = 'speakers';\n                }\n            }\n            if (isTopicLink) {\n                externalref = element.getAttribute('data-externalref');\n                type = 'topics';\n            }\n            if (isTopicLink || isSpeakerLink) {\n                ResourceBrowser.setWaitingCursor(true, currentPlayerForm, false);\n                // The timeout is required to allow the DOM to update before we start filtering.\n                setTimeout(async function() {\n                    await ResourceBrowser.loadResourcePageWithFilter(externalref, type);\n                    ResourceBrowser.setWaitingCursor(false, currentPlayerForm, false);\n                    currentPlayerForm.modal.hide();\n                });\n            }\n            // Speaker links jsut filter the browser window videos page atm.\n            // if (isSpeakerLink) {\n            //     externalref = element.getAttribute('data-speakers');\n            //     reRenderResourcePlayer(externalref, 1, 'speakers');\n            // }\n        }\n\n        // Select the resource and close both modals.\n        if (element.closest('button[data-action=\"select\"]')) {\n            e.preventDefault();\n            const button = element.closest('button[data-action=\"select\"]');\n            const type = button.getAttribute('data-type');\n            const externalref = button.getAttribute('data-externalref');\n            ResourceBrowser.selectResource(externalref, type);\n        }\n        return true;\n    });\n};\n\n/**\n * Open the resource player modal.\n *\n * @param {string} externalref The external reference of the resource\n */\nconst openResourcePlayer = (externalref) => {\n    const resourceType = document.getElementsByClassName('disabled-looking')[0].getAttribute('data-type');\n    if (resourceType !== 'play') {\n        // The resource player is currently only available for videos in the mod_form.\n        // We will enble this again for students in the course page.\n        alert('Resource player is only available for videos in the mod form. Resource selected: ' + resourceType);\n        return;\n    }\n    const cmid = document.querySelector('input[name=\"coursemodule\"]').value;\n    const courseid = document.querySelector('input[name=\"course\"]').value;\n    const url = window.location.href;\n    var titleString, selectString;\n    if (resourceType === 'playlists') {\n        titleString = getString('playlistviewer', 'mod_clearlesson');\n        selectString = getString('selectplaylist', 'mod_clearlesson');\n    }\n    if (resourceType === 'play') {\n        titleString = getString('videoplayer', 'mod_clearlesson');\n        selectString = getString('selectvideo', 'mod_clearlesson');\n    }\n    if (resourceType === 'speakers') {\n        titleString = getString('speakerviewer', 'mod_clearlesson');\n        selectString = getString('selectspeaker', 'mod_clearlesson');\n    }\n    const playerForm = new ModalForm({\n        formClass: 'mod_clearlesson\\\\forms\\\\resource_player_form',\n        args: {type: resourceType, cmid: cmid, course: courseid, url: url, externalref: externalref, position: 1},\n        modalConfig: {title: titleString, saveButtonText: selectString},\n    });\n\n    currentPlayerForm = playerForm;\n\n    playerForm.addEventListener(playerForm.events.LOADED, async function() {\n        // Set the modal to nearly fullscreen size.\n        let modalHeight = Math.ceil(window.innerHeight * 0.94);\n        let modalWidth = Math.ceil(window.innerWidth * 0.94);\n        modalWidth = modalWidth > 1800 ? 1800 : modalWidth;\n        const modalRootInner = playerForm.modal.getRoot()[0].children[0];\n        modalRootInner.setAttribute('style',\n            'width: ' + modalWidth +\n            'px;max-width: ' + modalWidth +\n            'px;height: ' + modalHeight +\n            'px;max-height: ' + modalHeight + 'px;'\n        );\n        let saveString = await selectString;\n        let backString = await getString('back');\n        Utils.waitForElement('.modal-footer button.btn-primary', modalRootInner, function() {\n            const saveButton = modalRootInner.querySelector('.modal-footer button.btn-primary');\n            saveButton.innerHTML = saveString;\n            saveButton.setAttribute('data-action', 'select');\n            saveButton.setAttribute('data-type', resourceType);\n            saveButton.setAttribute('data-externalref', externalref);\n            saveButton.classList.add('d-block');\n            const cancelButton = modalRootInner.querySelector('.modal-footer button.btn-secondary');\n            cancelButton.innerHTML = backString;\n        });\n    });\n\n    playerForm.show();\n};\n\n/**\n * Re-render the resource player modal.\n * @param {String} externalref\n * @param {Number} position\n * @param {String} type\n */\nconst reRenderResourcePlayer = async(externalref, position, type) => {\n    const cmid = document.querySelector('input[name=\"coursemodule\"]').value;\n    const courseid = document.querySelector('input[name=\"course\"]').value;\n    const url = window.location.href;\n    const formParams = {type: type, cmid: cmid, course: courseid, url: url, externalref: externalref, position: position};\n    const serialFormParams = Utils.serialize(formParams);\n    const bodyContent = currentPlayerForm.getBody(serialFormParams);\n    await currentPlayerForm.modal.setBodyContent(bodyContent);\n};\n"],"names":["currentPlayerForm","document","addEventListener","e","externalref","type","position","element","target","classList","contains","parentElement","_element$parentElemen","_element$classList2","_element$parentElemen2","preventDefault","getAttribute","getElementsByClassName","length","videoListColumn","closest","hasAttribute","parseInt","firstElementChild","innerText","reRenderResourcePlayer","openResourcePlayer","isSpeakerLink","_element$classList3","isTopicLink","ResourceBrowser","setWaitingCursor","setTimeout","async","loadResourcePageWithFilter","modal","hide","button","selectResource","resourceType","alert","cmid","querySelector","value","courseid","url","window","location","href","titleString","selectString","playerForm","ModalForm","formClass","args","course","modalConfig","title","saveButtonText","events","LOADED","modalHeight","Math","ceil","innerHeight","modalWidth","innerWidth","modalRootInner","getRoot","children","setAttribute","saveString","backString","Utils","waitForElement","saveButton","innerHTML","add","show","formParams","serialFormParams","serialize","bodyContent","getBody","setBodyContent"],"mappings":"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"}