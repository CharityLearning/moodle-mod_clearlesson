{"version":3,"file":"progress-tracker.min.js","sources":["../src/progress-tracker.js"],"sourcesContent":["/* eslint-disable promise/catch-or-return */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Progress tracker for mod_clearlesson.\n *\n * @module     mod_clearlesson/progress-tracker\n * @copyright  2024 Dan Watkins <dwatkins@charitylearning.org>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      2.9\n */\n\nimport Ajax from 'core/ajax';\n\nvar loopCount = 0;\n\nexport const init = async() => {\n    if (typeof window.VimeoPlayerConstructor === 'undefined') {\n        setTimeout(init, 100);\n        return;\n    }\n    if (typeof window.player !== 'undefined') {\n        await window.player.destroy(); // We destroy the previous player before creating a new one.\n        delete window.player;\n    }\n\n    const iframe = document.querySelector('.video-container > iframe.videoframe');\n\n    window.player = new window.VimeoPlayerConstructor(iframe);\n\n    window.extref = await window.player.getVideoTitle().then(function(title) {\n        return title;\n    });\n\n    const container = iframe.closest('.incourse');\n    if (container?.getAttribute('data-watchedall') == '1') {\n        // If all videos in the resource have already been watched, we don't update the progress.\n        // If the resource has been watched but the completion status is incorrect,\n        // we'll update it in moodle via the page-functions method updateCompletionStatusIfIncorrect.\n        window.watchedAll = true;\n        window.updateProgress = false;\n    } else {\n        window.watchedAll = false;\n        window.updateProgress = true;\n    }\n\n    window.viewedStatus =\n        container?.querySelector('.video-title-wrapper .watched-check')?.classList\n            .contains('notwatched') ? 'unwatched' : 'watched';\n\n    // When progress is updated, if the video has a higher status already, we don't update it.\n    window.player.on('play', function() {\n        if (window.viewedStatus === 'unwatched') {\n            window.viewedStatus = 'inprogress';\n        }\n    });\n\n    window.player.on('ended', async function() {\n        if (window.updateProgress) {\n            videoWatched();\n            updateProgressAndActivity();\n        }\n    });\n\n    window.currentTime = 0;\n    window.player.on('timeupdate', function(data) {\n        window.player.getDuration().then(async function(duration) {\n            // If 90% of the video has been watched, we update the status to 'watched'.\n            if (data.seconds / duration >= 0.9) {\n                if (window.updateProgress) {\n                    videoWatched();\n                    updateProgressAndActivity();\n                }\n            }\n            return true;\n        });\n        // Round off and provide as integer.\n        window.currentTime = Math.round(data.seconds);\n    });\n\n    // Before the user leaves the page, we update the progress.\n    window.addEventListener('beforeunload', async function() {\n        if (window.updateProgress) {\n            updateProgressAndActivity();\n        }\n    }, true);\n\n    // Every 30 minutes we update the progress.\n    setInterval(async function() {\n        if (window.updateProgress) {\n            updateProgressAndActivity();\n        }\n    }, 1800000);\n};\n\n/**\n * Update the progress and status of the video.\n *\n * @return {Promise} The promise with the response of the AJAX call.\n */\nconst updateProgress = async() => {\n    if (typeof window.viewedStatus === 'undefined'\n        && (window.type === 'series' || window.type === 'collections')) {\n        window.viewedStatus = (window.watchedAll) ? 'watched' : 'unwatched';\n    }\n\n    if (typeof window.extref === 'undefined'\n        || typeof window.currentTime === 'undefined' || typeof window.viewedStatus === 'undefined'\n        || typeof window.courseid === 'undefined' || typeof window.cmid === 'undefined'\n        || typeof window.resourceRef === 'undefined' || typeof window.type === 'undefined'\n        || typeof window.pageType === 'undefined' || typeof window.watchedAll === 'undefined') {\n        return false;\n    }\n    loopCount = 0;\n\n    const args = {\n        externalref: window.extref,\n        status: window.viewedStatus,\n        duration: window.currentTime,\n        courseid: window.courseid,\n        cmid: window.cmid,\n        resourceref: window.resourceRef,\n        type: window.type,\n        pagetype: window.pageType,\n        watchedall: window.watchedAll\n    };\n\n    const request = {\n                        methodname: 'mod_clearlesson_update_progress',\n                        args: args\n                    };\n\n    return Ajax.call([request])[0];\n};\n\n/**\n * The video has been watched, update the status and reveal any watched checks relevant in the DOM.\n */\nfunction videoWatched() {\n    window.viewedStatus = 'watched';\n    window.updateProgress = false;\n    document.querySelector('.video-title-wrapper .watched-check').classList.remove('notwatched');\n    const playlistVideoLink = document.querySelector('.video-card-side a[data-externalref=\"' + window.extref + '\"]');\n    if (playlistVideoLink) {\n        playlistVideoLink.closest('.video-card-side').querySelector('.watched-check').classList.remove('notwatched');\n        const otherVideosColumn = playlistVideoLink.closest('.box');\n        let watchedAll = true;\n        otherVideosColumn.querySelectorAll('.watched-check').forEach(function(watchedCheck) {\n            if (watchedCheck.classList.contains('notwatched')) {\n                watchedAll = false;\n            }\n        });\n        if (watchedAll) {\n            const itemRef = playlistVideoLink.closest('.incourse-player').getAttribute('data-resourceref');\n            menuItemWatched(itemRef);\n        }\n    }\n}\n\n/**\n * All videos in a menu item have been watched, update the menuitem by removing the notwatched class.\n * @param {String} itemRef The externalref of the menu item.\n * @param {Boolean} direct Is this the direct parent menu?\n * We update the parent menu items by resource ref but sometimes 2 parents\n * eg playlist & series will have the same resource ref. Direct determines which parent to update.\n */\nexport function menuItemWatched(itemRef, direct = true) {\n    var domPosition;\n    const menuItems = document.querySelectorAll('.menu-item[data-externalref=\"' + itemRef + '\"]');\n    if (!menuItems) {\n        return false;\n    }\n    if (direct) {\n        domPosition = menuItems.length - 1;\n    } else {\n        domPosition = 0;\n    }\n    menuItems.forEach(function(singleItem, index) {\n        // The last menu item is the one we want to update as this will be the menuItemParent of the player.\n        if (index === domPosition) {\n            singleItem.querySelector('.watched-check').classList.remove('notwatched');\n            // If all menu items in the parent have been watched, we update the parents parent if it is present.\n            const parentMenu = singleItem.closest('.menu-container');\n            if (parentMenu) {\n                let watchedAll = true;\n                parentMenu.querySelectorAll('.watched-check').forEach(function(watchedCheck) {\n                    if (watchedCheck.classList.contains('notwatched')) {\n                        watchedAll = false;\n                    }\n                });\n                if (watchedAll) {\n                    const parentResourceRef = parentMenu.getAttribute('data-resourceref');\n                    if (direct) { // There will only be ever be 2 parents.\n                        // No infinite loops please.\n                        menuItemWatched(parentResourceRef, false);\n                    }\n                }\n            }\n        }\n    });\n    return true;\n}\n\n/**\n * Update the progress of the video and then the activity module in the course page if required.\n */\nexport async function updateProgressAndActivity() {\n    var activityInfo;\n    const response = await updateProgress();\n    if (!response) {\n        if (loopCount++ < 20) {\n            setTimeout(updateProgressAndActivity, 100);\n            return false;\n        }\n    }\n    if (response?.activitymodulehtml) {\n        if (window.pageType === 'course') {\n            activityInfo = document.querySelector('.activity[data-id=\"' + window.cmid + '\"]');\n        }\n        if (window.pageType === 'activity') {\n            activityInfo = document.querySelector('.activity-information');\n        }\n        if (activityInfo) {\n            activityInfo.outerHTML = response.activitymodulehtml;\n        }\n        window.watchedAll = true;\n        document.querySelector('.incourse')?.setAttribute('data-watchedall', '1');\n    }\n    return true;\n}\n"],"names":["loopCount","init","async","window","VimeoPlayerConstructor","setTimeout","player","destroy","iframe","document","querySelector","extref","getVideoTitle","then","title","container","closest","getAttribute","watchedAll","updateProgress","viewedStatus","classList","contains","on","videoWatched","updateProgressAndActivity","currentTime","data","getDuration","duration","seconds","Math","round","addEventListener","setInterval","remove","playlistVideoLink","otherVideosColumn","querySelectorAll","forEach","watchedCheck","menuItemWatched","itemRef","direct","domPosition","menuItems","length","singleItem","index","parentMenu","parentResourceRef","activityInfo","response","type","courseid","cmid","resourceRef","pageType","request","methodname","args","externalref","status","resourceref","pagetype","watchedall","Ajax","call","activitymodulehtml","outerHTML","setAttribute"],"mappings":"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"}