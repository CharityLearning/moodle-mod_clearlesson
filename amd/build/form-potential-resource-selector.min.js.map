{"version":3,"file":"form-potential-resource-selector.min.js","sources":["../src/form-potential-resource-selector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Frameworks datasource.\n *\n * This module is compatible with core/form-autocomplete.\n *\n * @module     mod_clearlesson/form-potential-resource-selector\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nexport default {/** @alias module:tool_lpmigrate/frameworks_datasource */\n    /**\n     * List frameworks.\n     *\n     * @param {String} type The type of resource.\n     * @param {String} query The query.\n     * @return {Promise}\n     */\n    list: function(type, query) {\n        var args = {\n                type: type,\n                query: query\n            };\n        return Ajax.call([{\n            methodname: 'mod_clearlesson_get_potential_resources',\n            args: args\n        }])[0];\n    },\n\n    /**\n     * Process the results for auto complete elements.\n     *\n     * @param {String} selector The selector of the auto complete element.\n     * @param {Array} results An array or results.\n     * @return {Array} New array of results.\n     */\n    processResults: function(selector, results) {\n        var options = [];\n        for (const result of results) {\n            result.value = result.externalref;\n            options.push(result);\n        }\n        return options;\n    },\n\n    /**\n     * Source of data for Ajax element.\n     *\n     * @param {String} selector The selector of the auto complete element.\n     * @param {String} query The query string.\n     * @param {Function} callback A callback function receiving an array of results.\n     */\n    /* eslint-disable promise/no-callback-in-promise */\n    transport: function(selector, query, callback) {\n        const selectedType = document.getElementById('id_type').value;\n        this.list(selectedType, query).then((callback))\n        .catch(Notification.exception);\n    }\n};"],"names":["list","type","query","args","Ajax","call","methodname","processResults","selector","results","options","result","value","externalref","push","transport","callback","selectedType","document","getElementById","then","catch","Notification","exception"],"mappings":";;;;;;;;;0LA2Be,CAQXA,KAAM,SAASC,KAAMC,WACbC,KAAO,CACHF,KAAMA,KACNC,MAAOA,cAERE,cAAKC,KAAK,CAAC,CACdC,WAAY,0CACZH,KAAMA,QACN,IAURI,eAAgB,SAASC,SAAUC,aAC3BC,QAAU,OACT,MAAMC,UAAUF,QACjBE,OAAOC,MAAQD,OAAOE,YACtBH,QAAQI,KAAKH,eAEVD,SAWXK,UAAW,SAASP,SAAUN,MAAOc,gBAC3BC,aAAeC,SAASC,eAAe,WAAWP,WACnDZ,KAAKiB,aAAcf,OAAOkB,KAAMJ,UACpCK,MAAMC,sBAAaC"}