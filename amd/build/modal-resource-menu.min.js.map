{"version":3,"file":"modal-resource-menu.min.js","sources":["../src/modal-resource-menu.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A set of functions to be added to charts tab load-tabs.js.\n * Most of these functions enable modal forms for the adding/deleting of charts or editing existing charts.\n *\n * @module     mod_clearlesson/modal-resource-menu\n * @copyright  2024 Dan Watkins <dwatkins@charitylearning.org>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      2.9\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport * as Utils from './utils';\n\n// eslint-disable-next-line no-unused-vars\nvar currentMenuForm;\nexport const init = () => {\n    document.addEventListener('click', function(e) {\n        var element = e.target;\n        var speakerLink = false;\n        var externalref;\n        // This is the eye icon on non-video resources in the resource menu.\n        if (element.classList?.contains('view-icon')\n        || element.classList?.contains('view-link')) {\n            externalref = element.getAttribute('data-externalref');\n        }\n        // This is also the eye icon on non-video resources in the resource menu.\n        if (element.parentElement.classList?.contains('view-icon')\n        || element.parentElement.classList?.contains('view-link')) {\n            externalref = element.parentElement.getAttribute('data-externalref');\n        }\n\n        // This is the {{count}} videos or playlists etc link in the resource browser.\n        if ((element.classList?.contains('video-details-view'))\n        && !element.classList?.contains('view-link')) {\n            if (element.hasAttribute('data-view')) {\n                externalref = element.getAttribute('data-view');\n            } else {\n                externalref = element.parentElement.getAttribute('data-view');\n            }\n        }\n\n        // This is the speaker link in the video card.\n        if (element.classList?.contains('vid-speaker-link')) {\n            externalref = element.closest('.video-card-wrapper').getAttribute('data-speakers');\n            speakerLink = true;\n        }\n\n        if (externalref) {\n            e.preventDefault();\n            if (element.classList.contains('view-link')) {\n                const type = document.getElementById('menu-container').getAttribute('data-itemtype');\n                const card = element.closest('.menu-item-title');\n                const name = card.querySelector('.card-title').innerText.trim();\n                reRenderResourceMenu(externalref, name, type);\n            } else {\n                const card = element.closest('.video-card-wrapper');\n                var name;\n                if (speakerLink) {\n                    name = element.innerText;\n                } else {\n                    name = card.querySelector('.card-title').innerText;\n                }\n                openResourceMenu(externalref, name, speakerLink);\n            }\n        }\n    });\n};\n\n/**\n * Open the resource menu modal.\n * @param {String} externalref\n * @param {String} name\n * @param {Boolean} speaker\n */\nasync function openResourceMenu(externalref, name, speaker = false) {\n    var resourceType;\n    if (speaker) {\n        resourceType = 'speakers';\n    } else {\n        resourceType = document.getElementsByClassName('disabled-looking')[0].getAttribute('data-type');\n    }\n    const cmid = document.querySelector('input[name=\"coursemodule\"]').value;\n    const courseid = document.querySelector('input[name=\"course\"]').value;\n    const url = window.location.href;\n    const {titleString, selectString} = await getStringsFromResourceType(resourceType, name);\n\n    const menuForm = new ModalForm({\n        formClass: 'mod_clearlesson\\\\forms\\\\resource_menu_form',\n        args: {type: resourceType, cmid: cmid, course: courseid, url: url, externalref: externalref},\n        modalConfig: {title: titleString, saveButtonText: selectString},\n    });\n\n    currentMenuForm = menuForm;\n\n    menuForm.addEventListener(menuForm.events.LOADED, async function() {\n        // Set the modal to nearly fullscreen size.\n        let modalHeight = Math.ceil(window.innerHeight * 0.94);\n        let modalWidth = Math.ceil(window.innerWidth * 0.94);\n        modalWidth = modalWidth > 1800 ? 1800 : modalWidth;\n        const modalRootInner = menuForm.modal.getRoot()[0].children[0];\n        modalRootInner.setAttribute('style',\n            'width: ' + modalWidth +\n            'px;max-width: ' + modalWidth +\n            'px;height: ' + modalHeight +\n            'px;max-height: ' + modalHeight + 'px;'\n        );\n\n        setSaveButton(await selectString, resourceType, externalref);\n    });\n\n    menuForm.show();\n}\n\n/**\n * Re-render the resource menu modal.\n *\n * @param {String} externalref\n * @param {String} name\n * @param {String} type\n */\nasync function reRenderResourceMenu(externalref, name, type) {\n    const {titleString, selectString} = await getStringsFromResourceType(type, name);\n    const cmid = document.querySelector('input[name=\"coursemodule\"]').value;\n    const courseid = document.querySelector('input[name=\"course\"]').value;\n    const url = window.location.href;\n    const formParams = {type: type, cmid: cmid, course: courseid, url: url, externalref: externalref};\n    const serialFormParams = Utils.serialize(formParams);\n    const bodyContent = currentMenuForm.getBody(serialFormParams);\n    // Set the title\n    await currentMenuForm.modal.setTitle(titleString);\n    await currentMenuForm.modal.setBodyContent(bodyContent);\n    setSaveButton(await selectString, type, externalref);\n}\n\n/**\n * Get the title and select strings for the resource menu modal.\n *\n * @param {String} resourceType\n * @param {String} name\n */\nasync function getStringsFromResourceType(resourceType, name) {\n    var titleString, selectString;\n    switch (resourceType) {\n        case 'playlists':\n            titleString = await getString('playlistmenu', 'mod_clearlesson');\n            titleString = \"'\" + name + \"' \" + titleString;\n            selectString = getString('selectplaylist', 'mod_clearlesson');\n            break;\n        case 'speakers':\n            titleString = await getString('videos', 'mod_clearlesson');\n            titleString = name + \"'s \" + titleString;\n            selectString = getString('selectspeaker', 'mod_clearlesson');\n            break;\n        case 'topics':\n            titleString = await getString('videos', 'mod_clearlesson');\n            titleString = \"'\" + name + \"' \" + titleString;\n            selectString = getString('selecttopic', 'mod_clearlesson');\n            break;\n        case 'series':\n            titleString = await getString('seriesmenu', 'mod_clearlesson');\n            titleString = \"'\" + name + \"' \" + titleString;\n            selectString = getString('selectseries', 'mod_clearlesson');\n            break;\n        case 'collections':\n            titleString = await getString('collectionmenu', 'mod_clearlesson');\n            titleString = \"'\" + name + \"' \" + titleString;\n            selectString = getString('selectcollection', 'mod_clearlesson');\n            break;\n    }\n    return {titleString, selectString};\n}\n\n/**\n * Set the save button for the resource menu modal.\n * @param {String} saveString\n * @param {String} type\n * @param {String} externalref\n */\nasync function setSaveButton(saveString, type, externalref) {\n    const modalRootInner = currentMenuForm.modal.getRoot()[0].children[0];\n    Utils.waitForElement('.modal-footer button.btn-primary', modalRootInner, function() {\n        const saveButton = modalRootInner.querySelector('.modal-footer button.btn-primary');\n        saveButton.innerHTML = saveString;\n        saveButton.setAttribute('data-action', 'select');\n        saveButton.setAttribute('data-type', type);\n        saveButton.setAttribute('data-externalref', externalref);\n        saveButton.classList.add('d-block');\n    });\n}\n"],"names":["currentMenuForm","getStringsFromResourceType","resourceType","name","titleString","selectString","setSaveButton","saveString","type","externalref","modalRootInner","modal","getRoot","children","Utils","waitForElement","saveButton","querySelector","innerHTML","setAttribute","classList","add","document","addEventListener","e","element","target","speakerLink","contains","_element$classList2","getAttribute","parentElement","_element$parentElemen2","_element$classList3","_element$classList4","hasAttribute","_element$classList5","closest","preventDefault","getElementById","cmid","value","courseid","url","window","location","href","formParams","course","serialFormParams","serialize","bodyContent","getBody","setTitle","setBodyContent","reRenderResourceMenu","innerText","trim","card","getElementsByClassName","menuForm","ModalForm","formClass","args","modalConfig","title","saveButtonText","events","LOADED","async","modalHeight","Math","ceil","innerHeight","modalWidth","innerWidth","show","openResourceMenu"],"mappings":"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"}